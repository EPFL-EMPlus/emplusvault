(()=>{"use strict";CGL.RenderTargets=class{constructor(e){this._numBuffers=4,this.asString="",this._slots=["Default","Normal"],this._name="rendertargets"+CABLES.uuid(),this.mod=new CGL.ShaderModifier(e,this._name),this.mod.onBind=e=>{}}updateModules(){this.mod.removeModule(this._name+"_frag"),this.mod.addModule({priority:2,title:this._name+"_frag",name:"MODULE_COLOR",srcHeadFrag:"\n#ifdef MOD_SLOT_POS_WORLD\n    in vec3 MOD_pos_world;\n#endif\n\n#ifdef MOD_SLOT_POS_LOCAL\n    in vec3 MOD_pos_local;\n#endif\n\n#ifdef MOD_SLOT_POS_OBJECT\n    in vec3 MOD_pos_object;\n#endif\n\n#ifdef MOD_SLOT_POS_NORMAL_MV\n    in vec3 MOD_normal_mv;\n#endif\n",srcBodyFrag:this.getSrcFrag()}),this.mod.removeModule(this._name+"_vert"),this.mod.addModule({priority:2,title:this._name+"_vert",name:"MODULE_VERTEX_POSITION",srcHeadVert:"#ifdef MOD_SLOT_POS_WORLD\n    out vec3 MOD_pos_world;\n#endif\n\n#ifdef MOD_SLOT_POS_LOCAL\n    out vec3 MOD_pos_local;\n#endif\n\n#ifdef MOD_SLOT_POS_OBJECT\n    out vec3 MOD_pos_object;\n#endif\n\n#ifdef MOD_SLOT_POS_NORMAL_MV\n    out vec3 MOD_normal_mv;\n#endif\n",srcBodyVert:"#ifdef MOD_SLOT_POS_WORLD\n    MOD_pos_world=(mMatrix*pos).xyz;\n#endif\n\n#ifdef MOD_SLOT_POS_OBJECT\n    MOD_pos_object=(mMatrix*vec4(0.,0.,0.,1.)).xyz;\n#endif\n\n#ifdef MOD_SLOT_POS_LOCAL\n    MOD_pos_local=vPosition.xyz;\n#endif\n\n#ifdef MOD_SLOT_POS_NORMAL_MV\n    MOD_normal_mv=((viewMatrix*mMatrix)*vec4(norm,1.0)).xyz;\n#endif\n"})}getTypes(){return["Default","Material Id","Position World","Position Local","Position Object","Normal","Normal * ModelView","FragCoord.z","TexCoord","Black","0","1"]}setNumBuffers(e){this._numBuffers=e}getSrcString(e,n){let t="outColor";return""===n&&(t="col"),"Normal"==e?"    "+t+n+" = vec4(norm,1.);".endl():"Default"==e||"Color"==e?"    "+t+n+" = col;".endl():"1"==e?"    "+t+n+" = vec4(1.,1.,1.,1.);".endl():"0"==e?"    "+t+n+" = vec4(0.,0.,0.,0.);".endl():"Black"==e?"    "+t+n+" = vec4(0.,0.,0.,1.);".endl():"TexCoord"==e?"    "+t+n+" = vec4(texCoord,0.,1.);".endl():"Position Local"==e?"    "+t+n+" = vec4(MOD_pos_local,1.);".endl():"Position World"==e?"    "+t+n+" = vec4(MOD_pos_world,1.);".endl():"Position Object"==e?"    "+t+n+" = vec4(MOD_pos_object,1.);".endl():"Normal * ModelView"==e?"    "+t+n+" = vec4(MOD_normal_mv,1.);".endl():"Material Id"==e?"    "+t+n+" = vec4(materialId,instIdx,0.,1.);".endl():"FragCoord.z"==e?"    "+t+n+" = vec4(vec3(gl_FragCoord.z),1.);".endl():void 0}getSrcFrag(){let e="\n    #ifdef INSTANCING\n        float instIdx=frag_instIndex;\n    #endif\n    #ifndef INSTANCING\n        float instIdx=0.0;\n    #endif\n";if(1==this._slots.length)console.log(this._slots[0],this.getSrcString(this._slots[0],"")),e+=this.getSrcString(this._slots[0],"");else for(let n=0;n<this._numBuffers;n++)e+=this.getSrcString(this._slots[n],n);return e}update(e){this._slots=e,this.asString="";let n=!1,t=!1,o=!1,i=!1;this._numBuffers=e.length;for(let s=0;s<this._numBuffers;s++)n="Position World"==e[s]||n,i="Normal * ModelView"==e[s]||i,t="Position Local"==e[s]||t,o="Position Object"==e[s]||o,this.asString+=e[s],s!=this._numBuffers-1&&(this.asString+=" | ");this.updateModules(),this.mod.toggleDefine("MOD_SLOT_POS_WORLD",n),this.mod.toggleDefine("MOD_SLOT_POS_LOCAL",t),this.mod.toggleDefine("MOD_SLOT_POS_OBJECT",o),this.mod.toggleDefine("MOD_SLOT_POS_NORMAL_MV",i)}},((this.CGL=this.CGL||{}).COREMODULES=this.CGL.COREMODULES||{}).Rendertargets={}.Rendertargets})();